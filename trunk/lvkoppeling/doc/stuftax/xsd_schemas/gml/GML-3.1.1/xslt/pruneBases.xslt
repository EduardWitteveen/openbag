<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" 
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	xmlns:xlink="http://www.w3.org/1999/xlink"> 
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<!-- =========================================================== 
	This stylesheet prunes a "wanted" parameter value generated by getBases.xslt
	to exclude types from the schemas in the schemas parameter value.  Developed
	to facilitate creation of a GML subset schema to support the GML CRS schemas.
	Note that the type and element items in the parameters must include namespace 
	prefixes,  that they must be separated by commas, including a trailing comma 
	after the last item, and that they can not contain any newlines.  
	===========================================================-->
	<xsl:include href="utility.xslt"/>
	<xsl:param name="baseUri" select="document('../base/gml.xsd')"/>
	<xsl:param name="schemas">coordinateReferenceSystems.xsd,coordinateSystems.xsd,coordinateOperations.xsd,datums.xsd,referenceSystems.xsd,"/>
</xsl:param>
	<xsl:param name="wanted">gml:AbstractSingleCRSType,gml:AbstractCRS,gml:AbstractCRSType,gml:AbstractSingleCRS,gml:OwnershipAttributeGroup,gml:AssociationAttributeGroup,gml:CompoundCRSType,gml:SingleCRSPropertyType,gml:CompoundCRS,gml:GeographicCRSType,gml:EllipsoidalCSPropertyType,gml:GeodeticDatumPropertyType,gml:GeographicCRS,gml:VerticalCRSType,gml:VerticalCSPropertyType,gml:VerticalDatumPropertyType,gml:VerticalCRS,gml:GeocentricCRSType,gml:GeocentricCSPropertyType,gml:CartesianCS,gml:SphericalCS,gml:GeocentricCRS,gml:AbstractGeneralDerivedCRSType,gml:ConversionPropertyType,gml:AbstractGeneralDerivedCRS,gml:ProjectedCRSType,gml:GeographicCRSPropertyType,gml:CartesianCSPropertyType,gml:ProjectedCRS,gml:DerivedCRSType,gml:CodeType,gml:CoordinateSystemPropertyType,gml:DerivedCRS,gml:EngineeringCRSType,gml:EngineeringDatumPropertyType,gml:EngineeringCRS,gml:ImageCRSType,gml:ImageCSPropertyType,gml:ImageDatumPropertyType,gml:AffineCS,gml:ImageCRS,gml:TemporalCRSType,gml:TimeCSPropertyType,gml:TemporalDatumPropertyType,gml:TemporalCRS,gml:CoordinateSystemAxisType,gml:Definition,gml:DefinitionType,gml:CodeWithAuthorityType,gml:unitOfMeasure,gml:CoordinateSystemAxis,gml:AbstractCoordinateSystemType,gml:CoordinateSystemAxisPropertyType,gml:AggregationAttributeGroup,gml:AbstractCoordinateSystem,gml:EllipsoidalCSType,gml:EllipsoidalCS,gml:CartesianCSType,gml:VerticalCSType,gml:VerticalCS,gml:TimeCSType,gml:TimeCS,gml:UserDefinedCSType,gml:UserDefinedCS,gml:SphericalCSType,gml:PolarCSType,gml:PolarCS,gml:CylindricalCSType,gml:CylindricalCS,gml:AffineCSType,gml:LinearCSType,gml:LinearCS,gml:AbstractCoordinateOperationType,gml:operationVersion,gml:domainOfValidity,gml:scope,gml:sourceCRS,gml:targetCRS,gml:CRSPropertyType,gml:AbstractCoordinateOperation,gml:ConcatenatedOperationType,gml:SingleOperationPropertyType,gml:AbstractSingleOperationType,gml:AbstractSingleOperation,gml:PassThroughOperationType,gml:modifiedCoordinate,gml:OperationPropertyType,gml:AbstractOperationType,gml:usesMethod,gml:usesValue,gml:AbstractOperation,gml:ConversionType,gml:Conversion,gml:TransformationType,gml:id,gml:TransformationPropertyType,gml:Transformation,gml:AbstractGeneralParameterValueCompositionType,gml:AbstractGeneralParameterValue,gml:AbstractGeneralParameterValueType,gml:ParameterValueType,gml:MeasureType,gml:MeasureListType,gml:integerList,gml:valueOfParameter,gml:ParameterValueGroupType,gml:OperationParameterGroupPropertyType,gml:OperationMethodType,gml:AbstractGeneralOperationParameterPropertyType,gml:OperationMethodPropertyType,gml:OperationMethod,gml:AbstractGeneralOperationParameterType,gml:AbstractGeneralOperationParameter,gml:OperationParameterType,gml:OperationParameterPropertyType,gml:OperationParameter,gml:OperationParameterGroupType,gml:OperationParameterGroup,gml:AbstractDatumType,gml:CalDate,gml:AbstractDatum,gml:EngineeringDatumType,gml:EngineeringDatum,gml:ImageDatumType,gml:ImageDatum,gml:VerticalDatumType,gml:VerticalDatumTypeType,gml:VerticalDatum,gml:TemporalDatumType,gml:TemporalDatumBaseType,gml:TimePositionType,gml:TemporalDatum,gml:GeodeticDatumType,gml:PrimeMeridianPropertyType,gml:EllipsoidPropertyType,gml:GeodeticDatum,gml:EllipsoidType,gml:LengthType,gml:ScaleType,gml:Ellipsoid,gml:PrimeMeridianType,gml:AngleType,gml:PrimeMeridian,gml:ExtentPropertyType,gml:AbstractReferenceSystemType,gml:AbstractReferenceSystem,</xsl:param>
	<!-- =========================================================== -->
	<xsl:template match="/">
		<xsl:call-template name="pruneWantedList">
			<xsl:with-param name="schemas" select="$schemas"/>
			<xsl:with-param name="wanted" select="$wanted"/>
		</xsl:call-template>
	</xsl:template>
	<!-- =========================================================== -->
	<xsl:template name="pruneWantedList">
		<xsl:param name="schemas"/>
		<xsl:param name="wanted"/>
		<xsl:if test="$wanted != ''">
			<xsl:variable name="first" select="substring-before($wanted, ',')"/>
			<xsl:variable name="rest" select="substring-after($wanted, ',')"/>
			<xsl:variable name="doc">
				<xsl:call-template name="getDocName">
					<xsl:with-param name="wanted" select="$first"/>
				</xsl:call-template>
			</xsl:variable>
			<xsl:message>first <xsl:value-of select="$first"/> doc <xsl:value-of select="$doc"/></xsl:message>
			<xsl:if test="not(contains($schemas,$doc))">
				<xsl:message>INCLUDED</xsl:message>
				<xsl:value-of select="$first"/><xsl:text>,</xsl:text>
			</xsl:if>
			<xsl:if test="contains($rest,',')">
				<xsl:call-template name="pruneWantedList">
					<xsl:with-param name="schemas" select="$schemas"/>
					<xsl:with-param name="wanted" select="$rest"/>
				</xsl:call-template>
			</xsl:if>
		</xsl:if>
	</xsl:template>		
	<!-- =========================================================== -->
	<xsl:template name="getDocName">
		<xsl:param name="wanted"/>
		<xsl:for-each select="//depends/def[@name=$wanted]">
			<xsl:value-of select="@doc"/>
		</xsl:for-each>
	</xsl:template>
	<!-- =========================================================== -->
	<!-- =========================================================== -->
</xsl:stylesheet>
